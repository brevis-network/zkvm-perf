name: Benchmark Suite

on:
  workflow_dispatch:
    inputs:
      instances:
        required: true
        type: string
      provers:
        required: true
        type: string
      programs:
        required: true
        type: string
      shard_sizes:
        required: true
        type: string

jobs:
  sample:
    strategy:
      matrix:
        prover: ${{ fromJSON(github.event.inputs.provers) }}
        instance: ${{ fromJSON(github.event.inputs.instances) }}
        shard_size: ${{ fromJSON(github.event.inputs.shard_sizes) }}
    name: Run (${{ matrix.instance }}, ${{ matrix.prover }}, ${{ matrix.shard_size }})
    runs-on:
      [
        "runs-on",
        "runner=${{ matrix.instance }}",
        "spot=false",
        "run-id=${{ github.run_id }}",
      ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4 

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t zkvm-perf --platform linux/amd64 -f Dockerfile

      - name: Make benchmarks directory
        run: mkdir -p ${{ github.workspace }}/benchmarks

      - name: rust-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            ~/.rustup/
          key: rust-1.79.0-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: rust-1.79.0-

      - name: Run benchmark
        run: |
          docker run $(echo "${{ matrix.instance }}" | grep -q "g6" && echo "--gpus all" || echo "") --platform linux/amd64 \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v ${{ github.workspace }}/benchmarks:/usr/src/app/benchmarks \
            -v ~/.cargo/registry:/root/.cargo/registry \
            -v ~/.cargo/git:/root/.cargo/git \
            -e RUST_BACKTRACE=full \
            --network host \
            zkvm-perf \
            "python3 sweep.py \
              --filename benchmark  \
              --trials 1 \
              --programs ${{ github.event.inputs.programs }} \
              --provers ${{ matrix.prover }} \
              --shard-sizes ${{ matrix.shard_size }}"

      - name: List benchmark results
        run: cat ${{ github.workspace }}/benchmarks/benchmark_latest.csv